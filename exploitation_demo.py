#!/usr/bin/env python3
"""
Sayer7 Exploitation Testing Demo Script
This script demonstrates how to use the exploitation engine for testing vulnerabilities
"""

import sys
import os

# Add the current directory to Python path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from modules.exploitation_engine import ExploitationEngine

def demo_exploitation_engine():
    """Demonstrate the exploitation engine capabilities"""
    
    print("=" * 60)
    print("Sayer7 Exploitation Engine Demo")
    print("=" * 60)
    
    # Test target
    target = "https://httpbin.org"
    
    # Initialize exploitation engine
    print(f"[+] Initializing exploitation engine for: {target}")
    engine = ExploitationEngine(target)
    
    # Check Metasploit availability
    print("[+] Checking Metasploit availability...")
    msf_available = engine.metasploit_available
    print(f"    Metasploit available: {msf_available}")
    
    # Demonstrate XSS payload testing
    print("\n[+] Demonstrating XSS payload testing...")
    xss_vuln = {
        'type': 'xss',
        'name': 'search',
        'url': f"{target}/get?search=<script>alert('XSS')</script>"
    }
    
    xss_result = engine.test_xss_exploitation([xss_vuln])
    print(f"    XSS test results: {len(xss_result)} findings")
    
    # Demonstrate SQLi payload testing
    print("\n[+] Demonstrating SQL injection testing...")
    sqli_vuln = {
        'type': 'sqli',
        'name': 'id',
        'url': f"{target}/get?id=1' OR '1'='1"
    }
    
    sqli_result = engine.test_sqli_exploitation([sqli_vuln])
    print(f"    SQLi test results: {len(sqli_result)} findings")
    
    # Generate comprehensive report
    print("\n[+] Generating exploitation report...")
    test_vulnerabilities = [xss_vuln, sqli_vuln]
    report = engine.run_comprehensive_exploitation(test_vulnerabilities)
    
    print("\n" + "=" * 60)
    print("Exploitation Report Summary")
    print("=" * 60)
    print(f"Target: {report['target']}")
    print(f"Scan Date: {report['scan_date']}")
    print(f"Total Vulnerabilities: {report['summary']['total_vulnerabilities']}")
    print(f"Exploitable Vulnerabilities: {report['summary']['exploitable_vulnerabilities']}")
    print(f"Critical Vulnerabilities: {report['summary']['critical_vulnerabilities']}")
    print(f"High Vulnerabilities: {report['summary']['high_vulnerabilities']}")
    
    if report['exploitation_results']:
        print("\n[+] Exploitation Results:")
        for result in report['exploitation_results']:
            print(f"  - {result['vulnerability_type']}: {result['status']}")
    
    if report['recommendations']:
        print("\n[+] Security Recommendations:")
        for rec in report['recommendations']:
            print(f"  - {rec}")
    
    if report['proof_of_concepts']:
        print("\n[+] Proof of Concepts:")
        for poc in report['proof_of_concepts']:
            print(f"  - {poc}")
    
    return report

if __name__ == "__main__":
    try:
        demo_exploitation_engine()
    except KeyboardInterrupt:
        print("\n[!] Demo interrupted by user")
    except Exception as e:
        print(f"[!] Error during demo: {str(e)}")